{"version":3,"file":"static/js/914.6ff8a84b.chunk.js","mappings":"+SAKMA,EAAU,2CAEHC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,0DAC8BF,IAF5B,cACnBG,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qDAOXC,EAAe,mCAAG,WAAMC,GAAN,uFACNJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,YACuBN,IAFjB,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAY,mCAAG,WAAMD,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,oBAC+BN,IAF5B,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZI,EAAe,mCAAG,WAAMF,GAAN,uFACNJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,oBAC+BN,IAFzB,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAgB,mCAAG,WAAMC,GAAN,uFACPR,EAAAA,EAAAA,IAAA,0DAC8BQ,EAD9B,YACuCV,IAFhC,cACxBG,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qD,iHC4B7B,UA3DsB,WAAO,IAAD,IAC1B,GAAwBO,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBf,EAAAA,EAAAA,IAAgBW,GAFvC,OAEUZ,EAFV,OAGIS,EAAQT,GACRW,EAAUX,EAAKU,QAJnB,gDAMIO,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACP,IAKJ,OACE,4BACE,4BACE,SAAC,KAAD,CAAMQ,GAAE,oBAAEN,EAASO,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,mBAAQC,KAAK,SAAb,wBAEF,gBACEC,IACEhB,EAAKiB,YACD,kCAAoCjB,EAAKiB,YAXrD,8EAcMC,IAAI,MAEN,0BACGlB,EAAKmB,eADR,KAC0BnB,EAAKoB,aAD/B,QAGA,wCAAgBpB,EAAKqB,iBACrB,sCACA,uBAAIrB,EAAKsB,YACT,mCACCpB,EAAOqB,KAAI,SAAAC,GAAK,OACf,0BAAsBA,EAAMC,MAAjBD,EAAM9B,GADF,QAInB,4BACE,mDACA,SAAC,KAAD,CAAMkB,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,yBAEF,SAAC,KAAD,MAGL,C","sources":["api/getDataAPI.js","components/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n// const API_KEY =\n// 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2ZGMzYzY4MGExNGI5ZWZiN2U5YjlhNWQ2ZmQzZGNlMyIsInN1YiI6IjY0YzNmNDE4MDI4ZjE0MDBlZTlkOTEwYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zlpBdQHE5iERq6cscX7pgpnknyuueyRqCcB7RBnCZlA';\n// const BASE_LINK = 'https://api.themoviedb.org/3';\n// const END_POINT = '/trending/movie/day?';\nconst API_KEY = 'api_key=6dc3c680a14b9efb7e9b9a5d6fd3dce3';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieBySearch = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&${API_KEY}`\n  );\n  return response.data;\n};\n","import { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from '../../api/getDataAPI';\n\nconst MoviesDetails = () => {\n  const [info, setInfo] = useState({});\n  const [genres, setGenres] = useState([]);\n\n  const { MovieID } = useParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        const data = await getMovieDetails(MovieID);\n        setInfo(data);\n        setGenres(data.genres);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getDetails();\n  }, [MovieID]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      <div>\n        <Link to={location.state?.from ?? '/'}>\n          <button type=\"button\">Go back</button>\n        </Link>\n        <img\n          src={\n            info.poster_path\n              ? 'https://image.tmdb.org/t/p/w300' + info.poster_path\n              : defaultImg\n          }\n          alt=\"\"\n        />\n        <h2>\n          {info.original_title} ({info.release_date})\n        </h2>\n        <p>User score: {info.vote_average}</p>\n        <h3>Overview</h3>\n        <p>{info.overview}</p>\n        <h4>Genres</h4>\n        {genres.map(gener => (\n          <span key={gener.id}>{gener.name}</span>\n        ))}\n      </div>\n      <div>\n        <p>Additional information</p>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["API_KEY","getTrending","axios","response","data","getMovieDetails","id","getMovieCast","getMovieReviews","getMovieBySearch","query","useState","info","setInfo","genres","setGenres","MovieID","useParams","location","useLocation","useEffect","console","log","getDetails","to","state","from","type","src","poster_path","alt","original_title","release_date","vote_average","overview","map","gener","name"],"sourceRoot":""}