{"version":3,"file":"static/js/450.b229dcf5.chunk.js","mappings":"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","sources":["api/getDataAPI.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loade.jsx","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'api_key=6dc3c680a14b9efb7e9b9a5d6fd3dce3';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieBySearch = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&${API_KEY}`\n  );\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Oval } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Oval\n        height={80}\n        width={80}\n        color=\"#3f72b5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#3f72b5\"\n        strokeWidth={5}\n        strokeWidthSecondary={5}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__LI590\",\"backbutoon\":\"MovieDetails_backbutoon__HyEEr\",\"details__wrapper\":\"MovieDetails_details__wrapper__EsGuO\",\"details__poster\":\"MovieDetails_details__poster__SJauK\",\"text__wrapper\":\"MovieDetails_text__wrapper__mdj1H\",\"addinfo__wrapper\":\"MovieDetails_addinfo__wrapper__bRGhK\",\"title__wrapper\":\"MovieDetails_title__wrapper__pWtym\",\"link__buttons_wrapper\":\"MovieDetails_link__buttons_wrapper__BXroE\",\"link__buttons\":\"MovieDetails_link__buttons__lRq4y\"};","import { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovieDetails } from '../api/getDataAPI';\nimport Loader from 'components/Loader/Loade';\n\nimport css from './MovieDetails.module.css';\n\nconst MoviesDetails = () => {\n  const [info, setInfo] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { MovieID } = useParams();\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setIsLoading(true);\n    async function getDetails() {\n      try {\n        const data = await getMovieDetails(MovieID);\n        setInfo(data);\n        setGenres(data.genres);\n      } catch (error) {\n        setError(true);\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getDetails();\n  }, [MovieID]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div className={css.wrapper}>\n      {isLoading && <Loader />}\n      {error && <p>Oops ... Somesing went wrong...</p>}\n      <Link to={backLink.current}>\n        <button className={css.backbutoon} type=\"button\">\n          Go back\n        </button>\n      </Link>\n      <div className={css.details__wrapper}>\n        <div>\n          <img\n            className={css.details__poster}\n            src={\n              info.poster_path\n                ? 'https://image.tmdb.org/t/p/w300' + info.poster_path\n                : defaultImg\n            }\n            alt=\"\"\n          />\n        </div>\n        <div className={css.text__wrapper}>\n          <h2>\n            {info.original_title} (\n            {info.release_date && info.release_date.slice(0, 4)})\n          </h2>\n          <p>User score: {Math.round((info.vote_average / 10) * 100)}%</p>\n          <h3>Overview</h3>\n          <p>{info.overview}</p>\n          <h4>Genres</h4>\n          {genres.map(gener => (\n            <span key={gener.id}>{gener.name}</span>\n          ))}\n        </div>\n      </div>\n\n      <div className={css.addinfo__wrapper}>\n        <p className={css.title__wrapper}>Additional information</p>\n        <div className={css.link__buttons_wrapper}>\n          <Link to=\"cast\">\n            <button type=\"button\" className={css.link__buttons}>\n              Cast\n            </button>\n          </Link>\n          <Link to=\"reviews\">\n            <button type=\"button\" className={css.link__buttons}>\n              Reviews\n            </button>\n          </Link>\n        </div>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["API_KEY","getTrending","axios","response","data","getMovieDetails","id","getMovieCast","getMovieReviews","getMovieBySearch","query","className","css","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","useState","info","setInfo","genres","setGenres","isLoading","setIsLoading","error","setError","MovieID","useParams","location","useLocation","backLink","useRef","state","from","useEffect","console","log","getDetails","Loade","to","current","type","src","poster_path","alt","original_title","release_date","slice","Math","round","vote_average","overview","map","gener","name"],"sourceRoot":""}